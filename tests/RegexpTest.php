<?php

namespace BenTools\Violin\Tests;

use BenTools\Violin\Violin;
use PHPUnit\Framework\TestCase;

final class RegexpTest extends TestCase
{

    public function testHasMatches()
    {
        $this->assertTrue(Violin::tune(' ğŸ¤— fÃ’Ã”   BÃ€Å˜ ')->against('/(ğŸ¤—)/')->hasMatches());
        $this->assertFalse(Violin::tune(' ğŸ¤— fÃ’Ã”   BÃ€Å˜ ')->against('/(ğŸ˜‚)/')->hasMatches());
    }

    public function testFindMatches()
    {
        $this->assertEquals('ğŸ¤—', Violin::tune(' ğŸ¤— fÃ’Ã”   BÃ€Å˜ ')->against('/(ğŸ¤—)/')->findMatches()[1]);
    }

    public function testFindAllMatches()
    {
        $this->assertEquals('ğŸ¤—', Violin::tune(' ğŸ¤— fÃ’Ã”   BÃ€Å˜ ')->against('/(ğŸ¤—)/')->findAllMatches()[1][0]);
    }

    public function testReplace()
    {
        $this->assertEquals(' ğŸ˜‚ fÃ’Ã”   BÃ€Å˜ ', Violin::tune(' ğŸ¤— fÃ’Ã”   BÃ€Å˜ ')->against('/(ğŸ¤—)/')->replaceWith('ğŸ˜‚'));
    }

}
