<?php

namespace BenTools\Violin\Tests;

use BenTools\Violin\Violin;
use PHPUnit\Framework\TestCase;

final class PositionTest extends TestCase
{

    public function testIndexOf()
    {
        $this->assertEquals(false, Violin::tune('fooğŸ¤—barğŸ¤—')->indexOf('x'));
        $this->assertEquals(0, Violin::tune('fooğŸ¤—barğŸ¤—')->indexOf('f'));
        $this->assertEquals(4, Violin::tune('fooğŸ¤—barğŸ¤—')->indexOf('b'));
        $this->assertEquals(1, Violin::tune('fooğŸ¤—barğŸ¤—')->indexOf('o'));
        $this->assertEquals(3, Violin::tune('fooğŸ¤—barğŸ¤—')->indexOf('ğŸ¤—'));
    }

    public function testIndexOfLast()
    {
        $this->assertEquals(false, Violin::tune('fooğŸ¤—barğŸ¤—')->indexOfLast('x'));
        $this->assertEquals(0, Violin::tune('fooğŸ¤—barğŸ¤—')->indexOfLast('f'));
        $this->assertEquals(4, Violin::tune('fooğŸ¤—barğŸ¤—')->indexOfLast('b'));
        $this->assertEquals(2, Violin::tune('fooğŸ¤—barğŸ¤—')->indexOfLast('o'));
        $this->assertEquals(7, Violin::tune('fooğŸ¤—barğŸ¤—')->indexOfLast('ğŸ¤—'));
    }

    public function testContains()
    {
        $this->assertFalse(Violin::tune('fooğŸ¤—barğŸ¤—')->contains('x'));
        $this->assertTrue(Violin::tune('fooğŸ¤—barğŸ¤—')->contains('ğŸ¤—'));
        $this->assertFalse(Violin::tune('fooğŸ¤—barğŸ¤—')->contains('ğŸ¤—ğŸ¤—'));
    }

    public function testContainsAny()
    {
        $this->assertFalse(Violin::tune('fooğŸ¤—barğŸ¤—')->containsAny(['x']));
        $this->assertTrue(Violin::tune('fooğŸ¤—barğŸ¤—')->containsAny(['x', 'ğŸ¤—']));
        $this->assertTrue(Violin::tune('fooğŸ¤—barğŸ¤—')->containsAny(['x', 'ğŸ¤—', 'ğŸ¤—ğŸ¤—']));
        $this->assertFalse(Violin::tune('fooğŸ¤—barğŸ¤—')->containsAny(['x', 'ğŸ¤—ğŸ¤—']));
    }

    public function testContainAll()
    {
        $this->assertFalse(Violin::tune('fooğŸ¤—barğŸ¤—')->containsAll(['x']));
        $this->assertFalse(Violin::tune('fooğŸ¤—barğŸ¤—')->containsAll(['x', 'ğŸ¤—']));
        $this->assertFalse(Violin::tune('fooğŸ¤—barğŸ¤—')->containsAll(['x', 'ğŸ¤—', 'ğŸ¤—ğŸ¤—']));
        $this->assertTrue(Violin::tune('fooğŸ¤—barğŸ¤—')->containsAll(['foo', 'ğŸ¤—', 'bar']));
        $this->assertTrue(Violin::tune('fooğŸ¤—barğŸ¤—')->containsAll(['bar', 'ğŸ¤—']));
    }
}
